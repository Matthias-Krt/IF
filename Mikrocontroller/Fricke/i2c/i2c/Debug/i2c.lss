
i2c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000448  000004dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000448  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800122  00800122  000004fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000530  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000083f  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f3  00000000  00000000  00000e17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004e1  00000000  00000000  0000150a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  000019ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c9  00000000  00000000  00001b70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002f7  00000000  00000000  00001f39  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002230  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e4       	ldi	r30, 0x48	; 72
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 32       	cpi	r26, 0x22	; 34
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e2       	ldi	r26, 0x22	; 34
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 32       	cpi	r26, 0x23	; 35
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 10 02 	call	0x420	; 0x420 <main>
  9e:	0c 94 22 02 	jmp	0x444	; 0x444 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_14>:
	DDRC = DDRC | SDA;
	
	PORTC = PORTC | SDA;
	PORTC = PORTC | SCL;
	PORTC = PORTC & (~SCL);
}
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
  ae:	0f 92       	push	r0
  b0:	11 24       	eor	r1, r1
  b2:	2f 93       	push	r18
  b4:	3f 93       	push	r19
  b6:	4f 93       	push	r20
  b8:	8f 93       	push	r24
  ba:	9f 93       	push	r25
  bc:	ef 93       	push	r30
  be:	ff 93       	push	r31
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	1f 92       	push	r1
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	8b e2       	ldi	r24, 0x2B	; 43
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	2b e2       	ldi	r18, 0x2B	; 43
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	f9 01       	movw	r30, r18
  d4:	20 81       	ld	r18, Z
  d6:	2f 7c       	andi	r18, 0xCF	; 207
  d8:	fc 01       	movw	r30, r24
  da:	20 83       	st	Z, r18
  dc:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <stelle.1610>
  e0:	80 31       	cpi	r24, 0x10	; 16
  e2:	e1 f4       	brne	.+56     	; 0x11c <__vector_14+0x76>
  e4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <hex>
  e8:	88 23       	and	r24, r24
  ea:	29 f0       	breq	.+10     	; 0xf6 <__vector_14+0x50>
  ec:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
  f0:	8f 70       	andi	r24, 0x0F	; 15
  f2:	89 83       	std	Y+1, r24	; 0x01
  f4:	27 c0       	rjmp	.+78     	; 0x144 <__vector_14+0x9e>
  f6:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <__data_end>
  fa:	8d ec       	ldi	r24, 0xCD	; 205
  fc:	98 9f       	mul	r25, r24
  fe:	81 2d       	mov	r24, r1
 100:	11 24       	eor	r1, r1
 102:	86 95       	lsr	r24
 104:	86 95       	lsr	r24
 106:	86 95       	lsr	r24
 108:	88 0f       	add	r24, r24
 10a:	28 2f       	mov	r18, r24
 10c:	22 0f       	add	r18, r18
 10e:	22 0f       	add	r18, r18
 110:	82 0f       	add	r24, r18
 112:	f9 2f       	mov	r31, r25
 114:	f8 1b       	sub	r31, r24
 116:	8f 2f       	mov	r24, r31
 118:	89 83       	std	Y+1, r24	; 0x01
 11a:	14 c0       	rjmp	.+40     	; 0x144 <__vector_14+0x9e>
 11c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <hex>
 120:	88 23       	and	r24, r24
 122:	31 f0       	breq	.+12     	; 0x130 <__vector_14+0x8a>
 124:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 128:	82 95       	swap	r24
 12a:	8f 70       	andi	r24, 0x0F	; 15
 12c:	89 83       	std	Y+1, r24	; 0x01
 12e:	0a c0       	rjmp	.+20     	; 0x144 <__vector_14+0x9e>
 130:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <__data_end>
 134:	8d ec       	ldi	r24, 0xCD	; 205
 136:	98 9f       	mul	r25, r24
 138:	81 2d       	mov	r24, r1
 13a:	11 24       	eor	r1, r1
 13c:	86 95       	lsr	r24
 13e:	86 95       	lsr	r24
 140:	86 95       	lsr	r24
 142:	89 83       	std	Y+1, r24	; 0x01
 144:	85 e2       	ldi	r24, 0x25	; 37
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	25 e2       	ldi	r18, 0x25	; 37
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	f9 01       	movw	r30, r18
 14e:	20 81       	ld	r18, Z
 150:	42 2f       	mov	r20, r18
 152:	40 7f       	andi	r20, 0xF0	; 240
 154:	29 81       	ldd	r18, Y+1	; 0x01
 156:	22 2f       	mov	r18, r18
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	20 50       	subi	r18, 0x00	; 0
 15c:	3f 4f       	sbci	r19, 0xFF	; 255
 15e:	f9 01       	movw	r30, r18
 160:	20 81       	ld	r18, Z
 162:	24 2b       	or	r18, r20
 164:	fc 01       	movw	r30, r24
 166:	20 83       	st	Z, r18
 168:	8b e2       	ldi	r24, 0x2B	; 43
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	2b e2       	ldi	r18, 0x2B	; 43
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	f9 01       	movw	r30, r18
 172:	20 81       	ld	r18, Z
 174:	42 2f       	mov	r20, r18
 176:	43 73       	andi	r20, 0x33	; 51
 178:	29 81       	ldd	r18, Y+1	; 0x01
 17a:	22 2f       	mov	r18, r18
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	20 5f       	subi	r18, 0xF0	; 240
 180:	3e 4f       	sbci	r19, 0xFE	; 254
 182:	f9 01       	movw	r30, r18
 184:	20 81       	ld	r18, Z
 186:	24 2b       	or	r18, r20
 188:	fc 01       	movw	r30, r24
 18a:	20 83       	st	Z, r18
 18c:	8b e2       	ldi	r24, 0x2B	; 43
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	2b e2       	ldi	r18, 0x2B	; 43
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	f9 01       	movw	r30, r18
 196:	30 81       	ld	r19, Z
 198:	20 91 21 01 	lds	r18, 0x0121	; 0x800121 <stelle.1610>
 19c:	23 2b       	or	r18, r19
 19e:	fc 01       	movw	r30, r24
 1a0:	20 83       	st	Z, r18
 1a2:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <stelle.1610>
 1a6:	80 e3       	ldi	r24, 0x30	; 48
 1a8:	89 27       	eor	r24, r25
 1aa:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <stelle.1610>
 1ae:	00 00       	nop
 1b0:	0f 90       	pop	r0
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	ff 91       	pop	r31
 1b8:	ef 91       	pop	r30
 1ba:	9f 91       	pop	r25
 1bc:	8f 91       	pop	r24
 1be:	4f 91       	pop	r20
 1c0:	3f 91       	pop	r19
 1c2:	2f 91       	pop	r18
 1c4:	0f 90       	pop	r0
 1c6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 1ca:	0f 90       	pop	r0
 1cc:	1f 90       	pop	r1
 1ce:	18 95       	reti

000001d0 <Disp_init>:
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	cd b7       	in	r28, 0x3d	; 61
 1d6:	de b7       	in	r29, 0x3e	; 62
 1d8:	84 e2       	ldi	r24, 0x24	; 36
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	24 e2       	ldi	r18, 0x24	; 36
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	f9 01       	movw	r30, r18
 1e2:	20 81       	ld	r18, Z
 1e4:	2f 60       	ori	r18, 0x0F	; 15
 1e6:	fc 01       	movw	r30, r24
 1e8:	20 83       	st	Z, r18
 1ea:	8a e2       	ldi	r24, 0x2A	; 42
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	2a e2       	ldi	r18, 0x2A	; 42
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	f9 01       	movw	r30, r18
 1f4:	20 81       	ld	r18, Z
 1f6:	2c 6f       	ori	r18, 0xFC	; 252
 1f8:	fc 01       	movw	r30, r24
 1fa:	20 83       	st	Z, r18
 1fc:	84 e4       	ldi	r24, 0x44	; 68
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	22 e0       	ldi	r18, 0x02	; 2
 202:	fc 01       	movw	r30, r24
 204:	20 83       	st	Z, r18
 206:	87 e4       	ldi	r24, 0x47	; 71
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	2d e4       	ldi	r18, 0x4D	; 77
 20c:	fc 01       	movw	r30, r24
 20e:	20 83       	st	Z, r18
 210:	8e e6       	ldi	r24, 0x6E	; 110
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	22 e0       	ldi	r18, 0x02	; 2
 216:	fc 01       	movw	r30, r24
 218:	20 83       	st	Z, r18
 21a:	85 e4       	ldi	r24, 0x45	; 69
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	25 e0       	ldi	r18, 0x05	; 5
 220:	fc 01       	movw	r30, r24
 222:	20 83       	st	Z, r18
 224:	78 94       	sei
 226:	00 00       	nop
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	08 95       	ret

0000022e <warte>:
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	00 d0       	rcall	.+0      	; 0x234 <warte+0x6>
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 238:	1a 82       	std	Y+2, r1	; 0x02
 23a:	19 82       	std	Y+1, r1	; 0x01
 23c:	05 c0       	rjmp	.+10     	; 0x248 <warte+0x1a>
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 240:	9a 81       	ldd	r25, Y+2	; 0x02
 242:	01 96       	adiw	r24, 0x01	; 1
 244:	9a 83       	std	Y+2, r25	; 0x02
 246:	89 83       	std	Y+1, r24	; 0x01
 248:	89 81       	ldd	r24, Y+1	; 0x01
 24a:	9a 81       	ldd	r25, Y+2	; 0x02
 24c:	40 97       	sbiw	r24, 0x10	; 16
 24e:	bc f3       	brlt	.-18     	; 0x23e <warte+0x10>
 250:	00 00       	nop
 252:	0f 90       	pop	r0
 254:	0f 90       	pop	r0
 256:	df 91       	pop	r29
 258:	cf 91       	pop	r28
 25a:	08 95       	ret

0000025c <i2c_start>:
 25c:	cf 93       	push	r28
 25e:	df 93       	push	r29
 260:	cd b7       	in	r28, 0x3d	; 61
 262:	de b7       	in	r29, 0x3e	; 62
 264:	87 e2       	ldi	r24, 0x27	; 39
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	27 e2       	ldi	r18, 0x27	; 39
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	f9 01       	movw	r30, r18
 26e:	20 81       	ld	r18, Z
 270:	20 63       	ori	r18, 0x30	; 48
 272:	fc 01       	movw	r30, r24
 274:	20 83       	st	Z, r18
 276:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 27a:	88 e2       	ldi	r24, 0x28	; 40
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	28 e2       	ldi	r18, 0x28	; 40
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	f9 01       	movw	r30, r18
 284:	20 81       	ld	r18, Z
 286:	20 63       	ori	r18, 0x30	; 48
 288:	fc 01       	movw	r30, r24
 28a:	20 83       	st	Z, r18
 28c:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 290:	88 e2       	ldi	r24, 0x28	; 40
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	28 e2       	ldi	r18, 0x28	; 40
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	f9 01       	movw	r30, r18
 29a:	20 81       	ld	r18, Z
 29c:	2f 7e       	andi	r18, 0xEF	; 239
 29e:	fc 01       	movw	r30, r24
 2a0:	20 83       	st	Z, r18
 2a2:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 2a6:	88 e2       	ldi	r24, 0x28	; 40
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	28 e2       	ldi	r18, 0x28	; 40
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	f9 01       	movw	r30, r18
 2b0:	20 81       	ld	r18, Z
 2b2:	2f 7d       	andi	r18, 0xDF	; 223
 2b4:	fc 01       	movw	r30, r24
 2b6:	20 83       	st	Z, r18
 2b8:	00 00       	nop
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	08 95       	ret

000002c0 <i2c_stop>:
 2c0:	cf 93       	push	r28
 2c2:	df 93       	push	r29
 2c4:	cd b7       	in	r28, 0x3d	; 61
 2c6:	de b7       	in	r29, 0x3e	; 62
 2c8:	87 e2       	ldi	r24, 0x27	; 39
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	27 e2       	ldi	r18, 0x27	; 39
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	f9 01       	movw	r30, r18
 2d2:	20 81       	ld	r18, Z
 2d4:	20 61       	ori	r18, 0x10	; 16
 2d6:	fc 01       	movw	r30, r24
 2d8:	20 83       	st	Z, r18
 2da:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 2de:	88 e2       	ldi	r24, 0x28	; 40
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	28 e2       	ldi	r18, 0x28	; 40
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	f9 01       	movw	r30, r18
 2e8:	20 81       	ld	r18, Z
 2ea:	2f 7e       	andi	r18, 0xEF	; 239
 2ec:	fc 01       	movw	r30, r24
 2ee:	20 83       	st	Z, r18
 2f0:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 2f4:	88 e2       	ldi	r24, 0x28	; 40
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	28 e2       	ldi	r18, 0x28	; 40
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	f9 01       	movw	r30, r18
 2fe:	20 81       	ld	r18, Z
 300:	20 62       	ori	r18, 0x20	; 32
 302:	fc 01       	movw	r30, r24
 304:	20 83       	st	Z, r18
 306:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 30a:	88 e2       	ldi	r24, 0x28	; 40
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	28 e2       	ldi	r18, 0x28	; 40
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	f9 01       	movw	r30, r18
 314:	20 81       	ld	r18, Z
 316:	20 61       	ori	r18, 0x10	; 16
 318:	fc 01       	movw	r30, r24
 31a:	20 83       	st	Z, r18
 31c:	00 00       	nop
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	08 95       	ret

00000324 <i2c_write>:
 324:	cf 93       	push	r28
 326:	df 93       	push	r29
 328:	00 d0       	rcall	.+0      	; 0x32a <i2c_write+0x6>
 32a:	1f 92       	push	r1
 32c:	cd b7       	in	r28, 0x3d	; 61
 32e:	de b7       	in	r29, 0x3e	; 62
 330:	8b 83       	std	Y+3, r24	; 0x03
 332:	87 e2       	ldi	r24, 0x27	; 39
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	27 e2       	ldi	r18, 0x27	; 39
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	f9 01       	movw	r30, r18
 33c:	20 81       	ld	r18, Z
 33e:	20 61       	ori	r18, 0x10	; 16
 340:	fc 01       	movw	r30, r24
 342:	20 83       	st	Z, r18
 344:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 348:	80 e8       	ldi	r24, 0x80	; 128
 34a:	89 83       	std	Y+1, r24	; 0x01
 34c:	31 c0       	rjmp	.+98     	; 0x3b0 <i2c_write+0x8c>
 34e:	9b 81       	ldd	r25, Y+3	; 0x03
 350:	89 81       	ldd	r24, Y+1	; 0x01
 352:	89 23       	and	r24, r25
 354:	88 23       	and	r24, r24
 356:	51 f0       	breq	.+20     	; 0x36c <i2c_write+0x48>
 358:	88 e2       	ldi	r24, 0x28	; 40
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	28 e2       	ldi	r18, 0x28	; 40
 35e:	30 e0       	ldi	r19, 0x00	; 0
 360:	f9 01       	movw	r30, r18
 362:	20 81       	ld	r18, Z
 364:	20 61       	ori	r18, 0x10	; 16
 366:	fc 01       	movw	r30, r24
 368:	20 83       	st	Z, r18
 36a:	09 c0       	rjmp	.+18     	; 0x37e <i2c_write+0x5a>
 36c:	88 e2       	ldi	r24, 0x28	; 40
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	28 e2       	ldi	r18, 0x28	; 40
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	f9 01       	movw	r30, r18
 376:	20 81       	ld	r18, Z
 378:	2f 7e       	andi	r18, 0xEF	; 239
 37a:	fc 01       	movw	r30, r24
 37c:	20 83       	st	Z, r18
 37e:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 382:	88 e2       	ldi	r24, 0x28	; 40
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	28 e2       	ldi	r18, 0x28	; 40
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	f9 01       	movw	r30, r18
 38c:	20 81       	ld	r18, Z
 38e:	20 62       	ori	r18, 0x20	; 32
 390:	fc 01       	movw	r30, r24
 392:	20 83       	st	Z, r18
 394:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 398:	88 e2       	ldi	r24, 0x28	; 40
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	28 e2       	ldi	r18, 0x28	; 40
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	f9 01       	movw	r30, r18
 3a2:	20 81       	ld	r18, Z
 3a4:	2f 7d       	andi	r18, 0xDF	; 223
 3a6:	fc 01       	movw	r30, r24
 3a8:	20 83       	st	Z, r18
 3aa:	89 81       	ldd	r24, Y+1	; 0x01
 3ac:	86 95       	lsr	r24
 3ae:	89 83       	std	Y+1, r24	; 0x01
 3b0:	89 81       	ldd	r24, Y+1	; 0x01
 3b2:	88 23       	and	r24, r24
 3b4:	61 f6       	brne	.-104    	; 0x34e <i2c_write+0x2a>
 3b6:	87 e2       	ldi	r24, 0x27	; 39
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	27 e2       	ldi	r18, 0x27	; 39
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	f9 01       	movw	r30, r18
 3c0:	20 81       	ld	r18, Z
 3c2:	2f 7e       	andi	r18, 0xEF	; 239
 3c4:	fc 01       	movw	r30, r24
 3c6:	20 83       	st	Z, r18
 3c8:	88 e2       	ldi	r24, 0x28	; 40
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	28 e2       	ldi	r18, 0x28	; 40
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	f9 01       	movw	r30, r18
 3d2:	20 81       	ld	r18, Z
 3d4:	20 62       	ori	r18, 0x20	; 32
 3d6:	fc 01       	movw	r30, r24
 3d8:	20 83       	st	Z, r18
 3da:	0e 94 17 01 	call	0x22e	; 0x22e <warte>
 3de:	86 e2       	ldi	r24, 0x26	; 38
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	fc 01       	movw	r30, r24
 3e4:	80 81       	ld	r24, Z
 3e6:	88 2f       	mov	r24, r24
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	80 71       	andi	r24, 0x10	; 16
 3ec:	99 27       	eor	r25, r25
 3ee:	95 95       	asr	r25
 3f0:	87 95       	ror	r24
 3f2:	95 95       	asr	r25
 3f4:	87 95       	ror	r24
 3f6:	95 95       	asr	r25
 3f8:	87 95       	ror	r24
 3fa:	95 95       	asr	r25
 3fc:	87 95       	ror	r24
 3fe:	8a 83       	std	Y+2, r24	; 0x02
 400:	88 e2       	ldi	r24, 0x28	; 40
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	28 e2       	ldi	r18, 0x28	; 40
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	f9 01       	movw	r30, r18
 40a:	20 81       	ld	r18, Z
 40c:	2f 7d       	andi	r18, 0xDF	; 223
 40e:	fc 01       	movw	r30, r24
 410:	20 83       	st	Z, r18
 412:	8a 81       	ldd	r24, Y+2	; 0x02
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

00000420 <main>:

int main(void)
{	
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
 424:	cd b7       	in	r28, 0x3d	; 61
 426:	de b7       	in	r29, 0x3e	; 62
	Disp_init();
 428:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <Disp_init>
	hex = 0;
 42c:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <hex>
	
    while (1) 
    {
		i2c_start();
 430:	0e 94 2e 01 	call	0x25c	; 0x25c <i2c_start>
		zahl = i2c_write(0x90);		//Adresse: 0x90
 434:	80 e9       	ldi	r24, 0x90	; 144
 436:	0e 94 92 01 	call	0x324	; 0x324 <i2c_write>
 43a:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
		i2c_stop();
 43e:	0e 94 60 01 	call	0x2c0	; 0x2c0 <i2c_stop>
    }
 442:	f6 cf       	rjmp	.-20     	; 0x430 <main+0x10>

00000444 <_exit>:
 444:	f8 94       	cli

00000446 <__stop_program>:
 446:	ff cf       	rjmp	.-2      	; 0x446 <__stop_program>
