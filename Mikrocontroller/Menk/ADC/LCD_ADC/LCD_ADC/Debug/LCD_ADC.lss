
LCD_ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000430  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000106d  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000832  00000000  00000000  00001555  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005e8  00000000  00000000  00001d87  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a4  00000000  00000000  00002370  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000489  00000000  00000000  00002514  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b0b  00000000  00000000  0000299d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  000034a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ea       	ldi	r30, 0xAA	; 170
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <main>
  9e:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_send>:
{																					//prec = Anzahl der Nachkommastellen
	lcd_set_cursor(zeile, stelle);
	char buffer[10];
	dtostrf(dezimalwert,format,prec,buffer);												//5 = 5 Zeichen für ASCIIarray  
	lcd_write(buffer);
}
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	1f 92       	push	r1
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
  b0:	69 83       	std	Y+1, r22	; 0x01
  b2:	81 11       	cpse	r24, r1
  b4:	02 c0       	rjmp	.+4      	; 0xba <lcd_send+0x14>
  b6:	28 98       	cbi	0x05, 0	; 5
  b8:	01 c0       	rjmp	.+2      	; 0xbc <lcd_send+0x16>
  ba:	28 9a       	sbi	0x05, 0	; 5
  bc:	89 81       	ldd	r24, Y+1	; 0x01
  be:	88 23       	and	r24, r24
  c0:	14 f4       	brge	.+4      	; 0xc6 <lcd_send+0x20>
  c2:	5f 9a       	sbi	0x0b, 7	; 11
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <lcd_send+0x22>
  c6:	5f 98       	cbi	0x0b, 7	; 11
  c8:	89 81       	ldd	r24, Y+1	; 0x01
  ca:	86 ff       	sbrs	r24, 6
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <lcd_send+0x2c>
  ce:	5e 9a       	sbi	0x0b, 6	; 11
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <lcd_send+0x2e>
  d2:	5e 98       	cbi	0x0b, 6	; 11
  d4:	89 81       	ldd	r24, Y+1	; 0x01
  d6:	85 ff       	sbrs	r24, 5
  d8:	02 c0       	rjmp	.+4      	; 0xde <lcd_send+0x38>
  da:	2d 9a       	sbi	0x05, 5	; 5
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <lcd_send+0x3a>
  de:	2d 98       	cbi	0x05, 5	; 5
  e0:	89 81       	ldd	r24, Y+1	; 0x01
  e2:	84 ff       	sbrs	r24, 4
  e4:	02 c0       	rjmp	.+4      	; 0xea <lcd_send+0x44>
  e6:	2c 9a       	sbi	0x05, 4	; 5
  e8:	01 c0       	rjmp	.+2      	; 0xec <lcd_send+0x46>
  ea:	2c 98       	cbi	0x05, 4	; 5
  ec:	2a 9a       	sbi	0x05, 2	; 5
  ee:	8f e9       	ldi	r24, 0x9F	; 159
  f0:	9f e0       	ldi	r25, 0x0F	; 15
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <lcd_send+0x4c>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <lcd_send+0x52>
  f8:	00 00       	nop
  fa:	2a 98       	cbi	0x05, 2	; 5
  fc:	8f e9       	ldi	r24, 0x9F	; 159
  fe:	9f e0       	ldi	r25, 0x0F	; 15
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <lcd_send+0x5a>
 104:	00 c0       	rjmp	.+0      	; 0x106 <lcd_send+0x60>
 106:	00 00       	nop
 108:	89 81       	ldd	r24, Y+1	; 0x01
 10a:	83 ff       	sbrs	r24, 3
 10c:	02 c0       	rjmp	.+4      	; 0x112 <lcd_send+0x6c>
 10e:	5f 9a       	sbi	0x0b, 7	; 11
 110:	01 c0       	rjmp	.+2      	; 0x114 <lcd_send+0x6e>
 112:	5f 98       	cbi	0x0b, 7	; 11
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	82 ff       	sbrs	r24, 2
 118:	02 c0       	rjmp	.+4      	; 0x11e <lcd_send+0x78>
 11a:	5e 9a       	sbi	0x0b, 6	; 11
 11c:	01 c0       	rjmp	.+2      	; 0x120 <lcd_send+0x7a>
 11e:	5e 98       	cbi	0x0b, 6	; 11
 120:	89 81       	ldd	r24, Y+1	; 0x01
 122:	81 ff       	sbrs	r24, 1
 124:	02 c0       	rjmp	.+4      	; 0x12a <lcd_send+0x84>
 126:	2d 9a       	sbi	0x05, 5	; 5
 128:	01 c0       	rjmp	.+2      	; 0x12c <lcd_send+0x86>
 12a:	2d 98       	cbi	0x05, 5	; 5
 12c:	89 81       	ldd	r24, Y+1	; 0x01
 12e:	80 ff       	sbrs	r24, 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <lcd_send+0x90>
 132:	2c 9a       	sbi	0x05, 4	; 5
 134:	01 c0       	rjmp	.+2      	; 0x138 <lcd_send+0x92>
 136:	2c 98       	cbi	0x05, 4	; 5
 138:	2a 9a       	sbi	0x05, 2	; 5
 13a:	8f e9       	ldi	r24, 0x9F	; 159
 13c:	9f e0       	ldi	r25, 0x0F	; 15
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <lcd_send+0x98>
 142:	00 c0       	rjmp	.+0      	; 0x144 <lcd_send+0x9e>
 144:	00 00       	nop
 146:	2a 98       	cbi	0x05, 2	; 5
 148:	8f e1       	ldi	r24, 0x1F	; 31
 14a:	9e e4       	ldi	r25, 0x4E	; 78
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <lcd_send+0xa6>
 150:	00 c0       	rjmp	.+0      	; 0x152 <lcd_send+0xac>
 152:	00 00       	nop
 154:	0f 90       	pop	r0
 156:	df 91       	pop	r29
 158:	cf 91       	pop	r28
 15a:	08 95       	ret

0000015c <lcd_write>:
 15c:	0f 93       	push	r16
 15e:	1f 93       	push	r17
 160:	cf 93       	push	r28
 162:	df 93       	push	r29
 164:	fc 01       	movw	r30, r24
 166:	60 81       	ld	r22, Z
 168:	61 11       	cpse	r22, r1
 16a:	0b c0       	rjmp	.+22     	; 0x182 <lcd_write+0x26>
 16c:	13 c0       	rjmp	.+38     	; 0x194 <lcd_write+0x38>
 16e:	69 91       	ld	r22, Y+
 170:	66 23       	and	r22, r22
 172:	81 f0       	breq	.+32     	; 0x194 <lcd_write+0x38>
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 17a:	0c 17       	cp	r16, r28
 17c:	1d 07       	cpc	r17, r29
 17e:	b9 f7       	brne	.-18     	; 0x16e <lcd_write+0x12>
 180:	09 c0       	rjmp	.+18     	; 0x194 <lcd_write+0x38>
 182:	8c 01       	movw	r16, r24
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 18a:	e8 01       	movw	r28, r16
 18c:	21 96       	adiw	r28, 0x01	; 1
 18e:	01 50       	subi	r16, 0x01	; 1
 190:	1f 4f       	sbci	r17, 0xFF	; 255
 192:	ed cf       	rjmp	.-38     	; 0x16e <lcd_write+0x12>
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	1f 91       	pop	r17
 19a:	0f 91       	pop	r16
 19c:	08 95       	ret

0000019e <toggle_enable>:
 19e:	2a 9a       	sbi	0x05, 2	; 5
 1a0:	8f e9       	ldi	r24, 0x9F	; 159
 1a2:	9f e0       	ldi	r25, 0x0F	; 15
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <toggle_enable+0x6>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <toggle_enable+0xc>
 1aa:	00 00       	nop
 1ac:	2a 98       	cbi	0x05, 2	; 5
 1ae:	08 95       	ret

000001b0 <lcd_init>:
 1b0:	84 b1       	in	r24, 0x04	; 4
 1b2:	87 63       	ori	r24, 0x37	; 55
 1b4:	84 b9       	out	0x04, r24	; 4
 1b6:	8a b1       	in	r24, 0x0a	; 10
 1b8:	80 6c       	ori	r24, 0xC0	; 192
 1ba:	8a b9       	out	0x0a, r24	; 10
 1bc:	29 98       	cbi	0x05, 1	; 5
 1be:	2f ef       	ldi	r18, 0xFF	; 255
 1c0:	8d ee       	ldi	r24, 0xED	; 237
 1c2:	92 e0       	ldi	r25, 0x02	; 2
 1c4:	21 50       	subi	r18, 0x01	; 1
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	90 40       	sbci	r25, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <lcd_init+0x14>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <lcd_init+0x1e>
 1ce:	00 00       	nop
 1d0:	2d 9a       	sbi	0x05, 5	; 5
 1d2:	2c 9a       	sbi	0x05, 4	; 5
 1d4:	0e 94 cf 00 	call	0x19e	; 0x19e <toggle_enable>
 1d8:	2f ef       	ldi	r18, 0xFF	; 255
 1da:	83 ef       	ldi	r24, 0xF3	; 243
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	21 50       	subi	r18, 0x01	; 1
 1e0:	80 40       	sbci	r24, 0x00	; 0
 1e2:	90 40       	sbci	r25, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <lcd_init+0x2e>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <lcd_init+0x38>
 1e8:	00 00       	nop
 1ea:	0e 94 cf 00 	call	0x19e	; 0x19e <toggle_enable>
 1ee:	8f e9       	ldi	r24, 0x9F	; 159
 1f0:	9f e0       	ldi	r25, 0x0F	; 15
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <lcd_init+0x42>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <lcd_init+0x48>
 1f8:	00 00       	nop
 1fa:	0e 94 cf 00 	call	0x19e	; 0x19e <toggle_enable>
 1fe:	8f e1       	ldi	r24, 0x1F	; 31
 200:	9e e4       	ldi	r25, 0x4E	; 78
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <lcd_init+0x52>
 206:	00 c0       	rjmp	.+0      	; 0x208 <lcd_init+0x58>
 208:	00 00       	nop
 20a:	2d 9a       	sbi	0x05, 5	; 5
 20c:	2c 98       	cbi	0x05, 4	; 5
 20e:	0e 94 cf 00 	call	0x19e	; 0x19e <toggle_enable>
 212:	8f e1       	ldi	r24, 0x1F	; 31
 214:	9e e4       	ldi	r25, 0x4E	; 78
 216:	01 97       	sbiw	r24, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <lcd_init+0x66>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <lcd_init+0x6c>
 21c:	00 00       	nop
 21e:	68 e2       	ldi	r22, 0x28	; 40
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 226:	68 e0       	ldi	r22, 0x08	; 8
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 22e:	61 e0       	ldi	r22, 0x01	; 1
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 236:	66 e0       	ldi	r22, 0x06	; 6
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 23e:	6c e0       	ldi	r22, 0x0C	; 12
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 246:	08 95       	ret

00000248 <lcd_clear>:
 248:	61 e0       	ldi	r22, 0x01	; 1
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 250:	08 95       	ret

00000252 <lcd_set_cursor>:
 252:	81 30       	cpi	r24, 0x01	; 1
 254:	11 f4       	brne	.+4      	; 0x25a <lcd_set_cursor+0x8>
 256:	80 e4       	ldi	r24, 0x40	; 64
 258:	01 c0       	rjmp	.+2      	; 0x25c <lcd_set_cursor+0xa>
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	60 58       	subi	r22, 0x80	; 128
 25e:	68 0f       	add	r22, r24
 260:	80 e0       	ldi	r24, 0x00	; 0
 262:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send>
 266:	08 95       	ret

00000268 <lcd_bin>:
 268:	cf 92       	push	r12
 26a:	df 92       	push	r13
 26c:	ef 92       	push	r14
 26e:	ff 92       	push	r15
 270:	cf 93       	push	r28
 272:	df 93       	push	r29
 274:	cd b7       	in	r28, 0x3d	; 61
 276:	de b7       	in	r29, 0x3e	; 62
 278:	2a 97       	sbiw	r28, 0x0a	; 10
 27a:	0f b6       	in	r0, 0x3f	; 63
 27c:	f8 94       	cli
 27e:	de bf       	out	0x3e, r29	; 62
 280:	0f be       	out	0x3f, r0	; 63
 282:	cd bf       	out	0x3d, r28	; 61
 284:	6b 01       	movw	r12, r22
 286:	7c 01       	movw	r14, r24
 288:	84 2f       	mov	r24, r20
 28a:	62 2f       	mov	r22, r18
 28c:	0e 94 29 01 	call	0x252	; 0x252 <lcd_set_cursor>
 290:	42 e0       	ldi	r20, 0x02	; 2
 292:	be 01       	movw	r22, r28
 294:	6f 5f       	subi	r22, 0xFF	; 255
 296:	7f 4f       	sbci	r23, 0xFF	; 255
 298:	c6 01       	movw	r24, r12
 29a:	0e 94 9e 01 	call	0x33c	; 0x33c <__itoa_ncheck>
 29e:	ce 01       	movw	r24, r28
 2a0:	01 96       	adiw	r24, 0x01	; 1
 2a2:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_write>
 2a6:	2a 96       	adiw	r28, 0x0a	; 10
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	f8 94       	cli
 2ac:	de bf       	out	0x3e, r29	; 62
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	cd bf       	out	0x3d, r28	; 61
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	ff 90       	pop	r15
 2b8:	ef 90       	pop	r14
 2ba:	df 90       	pop	r13
 2bc:	cf 90       	pop	r12
 2be:	08 95       	ret

000002c0 <main>:
float zahl = 9.86754321;
uint8_t i = 0, j=255;

int main(void)
{
	lcd_init();
 2c0:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <lcd_init>
	lcd_clear();
 2c4:	0e 94 24 01 	call	0x248	; 0x248 <lcd_clear>
	*/
	
	uint16_t x, erg;
	
	// Init ADC
	ADMUX |= (1<<REFS0);													//Uref = 5V
 2c8:	ac e7       	ldi	r26, 0x7C	; 124
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	8c 91       	ld	r24, X
 2ce:	80 64       	ori	r24, 0x40	; 64
 2d0:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);													//ADC aktiviert
 2d2:	ea e7       	ldi	r30, 0x7A	; 122
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	80 81       	ld	r24, Z
 2d8:	80 68       	ori	r24, 0x80	; 128
 2da:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2);							//Vorteiler auf 128
 2dc:	80 81       	ld	r24, Z
 2de:	87 60       	ori	r24, 0x07	; 7
 2e0:	80 83       	st	Z, r24
	ADMUX &= ~((1<<MUX3)|(1<<MUX2)|(1<<MUX0));								//ADC1
 2e2:	8c 91       	ld	r24, X
 2e4:	82 7f       	andi	r24, 0xF2	; 242
 2e6:	8c 93       	st	X, r24
	//ADMUX |= (1<<ADLAR);
	ADMUX &= ~(1<<ADLAR);													//Ausgabe 10 Bit rechtsbündig
 2e8:	8c 91       	ld	r24, X
 2ea:	8f 7d       	andi	r24, 0xDF	; 223
 2ec:	8c 93       	st	X, r24
	//DIDR0 |= (1<<ADC5D);
	
	// Dummy Readout
	ADCSRA |= (1<<ADSC);
 2ee:	80 81       	ld	r24, Z
 2f0:	80 64       	ori	r24, 0x40	; 64
 2f2:	80 83       	st	Z, r24
	x = ADC;
 2f4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 2f8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
	
    while (1) 
    {
		ADCSRA |= (1<<ADSC);
 2fc:	ca e7       	ldi	r28, 0x7A	; 122
 2fe:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		erg = ADC;
 300:	08 e7       	ldi	r16, 0x78	; 120
 302:	10 e0       	ldi	r17, 0x00	; 0
	ADCSRA |= (1<<ADSC);
	x = ADC;
	
    while (1) 
    {
		ADCSRA |= (1<<ADSC);
 304:	88 81       	ld	r24, Y
 306:	80 64       	ori	r24, 0x40	; 64
 308:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC));
 30a:	88 81       	ld	r24, Y
 30c:	86 fd       	sbrc	r24, 6
 30e:	fd cf       	rjmp	.-6      	; 0x30a <main+0x4a>
		erg = ADC;
 310:	f8 01       	movw	r30, r16
 312:	e0 80       	ld	r14, Z
 314:	f1 80       	ldd	r15, Z+1	; 0x01
		
		uint8_t r = (erg & 0xFFC0)>>6;
		
		lcd_clear();
 316:	0e 94 24 01 	call	0x248	; 0x248 <lcd_clear>
		lcd_bin(erg,0,0);
 31a:	b7 01       	movw	r22, r14
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	40 e0       	ldi	r20, 0x00	; 0
 324:	0e 94 34 01 	call	0x268	; 0x268 <lcd_bin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 328:	ff ef       	ldi	r31, 0xFF	; 255
 32a:	21 ee       	ldi	r18, 0xE1	; 225
 32c:	84 e0       	ldi	r24, 0x04	; 4
 32e:	f1 50       	subi	r31, 0x01	; 1
 330:	20 40       	sbci	r18, 0x00	; 0
 332:	80 40       	sbci	r24, 0x00	; 0
 334:	e1 f7       	brne	.-8      	; 0x32e <main+0x6e>
 336:	00 c0       	rjmp	.+0      	; 0x338 <main+0x78>
 338:	00 00       	nop
 33a:	e4 cf       	rjmp	.-56     	; 0x304 <main+0x44>

0000033c <__itoa_ncheck>:
 33c:	bb 27       	eor	r27, r27
 33e:	4a 30       	cpi	r20, 0x0A	; 10
 340:	31 f4       	brne	.+12     	; 0x34e <__itoa_ncheck+0x12>
 342:	99 23       	and	r25, r25
 344:	22 f4       	brpl	.+8      	; 0x34e <__itoa_ncheck+0x12>
 346:	bd e2       	ldi	r27, 0x2D	; 45
 348:	90 95       	com	r25
 34a:	81 95       	neg	r24
 34c:	9f 4f       	sbci	r25, 0xFF	; 255
 34e:	0c 94 aa 01 	jmp	0x354	; 0x354 <__utoa_common>

00000352 <__utoa_ncheck>:
 352:	bb 27       	eor	r27, r27

00000354 <__utoa_common>:
 354:	fb 01       	movw	r30, r22
 356:	55 27       	eor	r21, r21
 358:	aa 27       	eor	r26, r26
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	aa 1f       	adc	r26, r26
 360:	a4 17       	cp	r26, r20
 362:	10 f0       	brcs	.+4      	; 0x368 <__utoa_common+0x14>
 364:	a4 1b       	sub	r26, r20
 366:	83 95       	inc	r24
 368:	50 51       	subi	r21, 0x10	; 16
 36a:	b9 f7       	brne	.-18     	; 0x35a <__utoa_common+0x6>
 36c:	a0 5d       	subi	r26, 0xD0	; 208
 36e:	aa 33       	cpi	r26, 0x3A	; 58
 370:	08 f0       	brcs	.+2      	; 0x374 <__utoa_common+0x20>
 372:	a9 5d       	subi	r26, 0xD9	; 217
 374:	a1 93       	st	Z+, r26
 376:	00 97       	sbiw	r24, 0x00	; 0
 378:	79 f7       	brne	.-34     	; 0x358 <__utoa_common+0x4>
 37a:	b1 11       	cpse	r27, r1
 37c:	b1 93       	st	Z+, r27
 37e:	11 92       	st	Z+, r1
 380:	cb 01       	movw	r24, r22
 382:	0c 94 c3 01 	jmp	0x386	; 0x386 <strrev>

00000386 <strrev>:
 386:	dc 01       	movw	r26, r24
 388:	fc 01       	movw	r30, r24
 38a:	67 2f       	mov	r22, r23
 38c:	71 91       	ld	r23, Z+
 38e:	77 23       	and	r23, r23
 390:	e1 f7       	brne	.-8      	; 0x38a <strrev+0x4>
 392:	32 97       	sbiw	r30, 0x02	; 2
 394:	04 c0       	rjmp	.+8      	; 0x39e <strrev+0x18>
 396:	7c 91       	ld	r23, X
 398:	6d 93       	st	X+, r22
 39a:	70 83       	st	Z, r23
 39c:	62 91       	ld	r22, -Z
 39e:	ae 17       	cp	r26, r30
 3a0:	bf 07       	cpc	r27, r31
 3a2:	c8 f3       	brcs	.-14     	; 0x396 <strrev+0x10>
 3a4:	08 95       	ret

000003a6 <_exit>:
 3a6:	f8 94       	cli

000003a8 <__stop_program>:
 3a8:	ff cf       	rjmp	.-2      	; 0x3a8 <__stop_program>
